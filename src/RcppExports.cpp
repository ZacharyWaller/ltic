// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// combined_algorithm
List combined_algorithm(NumericVector lambda, IntegerVector l, IntegerVector r, IntegerVector R0);
RcppExport SEXP _ltic_combined_algorithm(SEXP lambdaSEXP, SEXP lSEXP, SEXP rSEXP, SEXP R0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type l(lSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type R0(R0SEXP);
    rcpp_result_gen = Rcpp::wrap(combined_algorithm(lambda, l, r, R0));
    return rcpp_result_gen;
END_RCPP
}
// newton_algorithm
List newton_algorithm(NumericVector lambda, IntegerVector l, IntegerVector r);
RcppExport SEXP _ltic_newton_algorithm(SEXP lambdaSEXP, SEXP lSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type l(lSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(newton_algorithm(lambda, l, r));
    return rcpp_result_gen;
END_RCPP
}
// em_algorithm
List em_algorithm(NumericVector lambda, IntegerVector l, IntegerVector r, NumericVector R0);
RcppExport SEXP _ltic_em_algorithm(SEXP lambdaSEXP, SEXP lSEXP, SEXP rSEXP, SEXP R0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type l(lSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type R0(R0SEXP);
    rcpp_result_gen = Rcpp::wrap(em_algorithm(lambda, l, r, R0));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ltic_combined_algorithm", (DL_FUNC) &_ltic_combined_algorithm, 4},
    {"_ltic_newton_algorithm", (DL_FUNC) &_ltic_newton_algorithm, 3},
    {"_ltic_em_algorithm", (DL_FUNC) &_ltic_em_algorithm, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_ltic(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
